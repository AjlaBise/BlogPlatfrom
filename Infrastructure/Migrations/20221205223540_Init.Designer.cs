// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BlogPlatformContext))]
    [Migration("20221205223540_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entites.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Blog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fafc7e94-6b81-4b55-ae7e-7d542d727815"),
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2022, 12, 1, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3664),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application",
                            Title = "Augmented Reality iOS Application",
                            UpdatedAt = new DateTime(2022, 12, 4, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3703)
                        },
                        new
                        {
                            Id = new Guid("fe7bcfea-a650-4e18-979e-75c113c05908"),
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2022, 12, 3, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3708),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application-2",
                            Title = "Augmented Reality iOS Application 2",
                            UpdatedAt = new DateTime(2022, 12, 5, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3709)
                        },
                        new
                        {
                            Id = new Guid("2d5a1f3c-c149-4b3c-8ee9-6aaa0e870340"),
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2022, 11, 29, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3712),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application-3",
                            Title = "Augmented Reality iOS Application 3",
                            UpdatedAt = new DateTime(2022, 12, 3, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3713)
                        });
                });

            modelBuilder.Entity("Domain.Entites.BlogTags", b =>
                {
                    b.Property<Guid>("BlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("BlogId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogTags");

                    b.HasData(
                        new
                        {
                            BlogId = new Guid("2d5a1f3c-c149-4b3c-8ee9-6aaa0e870340"),
                            TagId = 1
                        },
                        new
                        {
                            BlogId = new Guid("fafc7e94-6b81-4b55-ae7e-7d542d727815"),
                            TagId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entites.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlogSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("552fb2d3-970f-4de0-9daf-1c7710c65224"),
                            BlogId = new Guid("fafc7e94-6b81-4b55-ae7e-7d542d727815"),
                            BlogSlug = "augmented-reality-ios-application-3",
                            Body = "Great blog.",
                            CreatedAt = new DateTime(2022, 11, 29, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3740),
                            Slug = "augmented-reality-ios-application-3",
                            UpdatedAt = new DateTime(2022, 12, 3, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3742)
                        },
                        new
                        {
                            Id = new Guid("8edd0363-4708-4cbd-89fc-cd9591a54f13"),
                            BlogId = new Guid("fafc7e94-6b81-4b55-ae7e-7d542d727815"),
                            BlogSlug = "augmented-reality-ios-application",
                            Body = "Great grate blog.",
                            CreatedAt = new DateTime(2022, 12, 3, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3825),
                            Slug = "augmented-reality-ios-application",
                            UpdatedAt = new DateTime(2022, 12, 5, 23, 35, 39, 917, DateTimeKind.Local).AddTicks(3827)
                        });
                });

            modelBuilder.Entity("Domain.Entites.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("BlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IOS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gazzda"
                        });
                });

            modelBuilder.Entity("Domain.Entites.BlogTags", b =>
                {
                    b.HasOne("Domain.Entites.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Domain.Entites.Comment", b =>
                {
                    b.HasOne("Domain.Entites.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Domain.Entites.Tag", b =>
                {
                    b.HasOne("Domain.Entites.Blog", null)
                        .WithMany("Tag")
                        .HasForeignKey("BlogId");
                });

            modelBuilder.Entity("Domain.Entites.Blog", b =>
                {
                    b.Navigation("Tag");
                });
#pragma warning restore 612, 618
        }
    }
}
